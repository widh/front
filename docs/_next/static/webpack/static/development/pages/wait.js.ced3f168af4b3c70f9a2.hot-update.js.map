{"version":3,"file":"static/webpack/static\\development\\pages\\wait.js.ced3f168af4b3c70f9a2.hot-update.js","sources":["webpack:///./pages/wait.tsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport { useRouter } from 'next/router';\nimport moment from 'moment';\nimport atob from 'atob';\nimport ImageDescriptors from '../misc/imageDescriptors';\nimport BackStage from '../components/BackStage';\nimport { useI18n } from '../misc/i18n';\n\nconst Wait: React.FC = () => {\n  const [now, setNow] = useState((new Date()).getTime());\n  const msg = useRef('');\n  const { query } = useRouter();\n  const { t, i18n } = useI18n('wait');\n\n  useEffect(() => {\n    moment.locale(document.documentElement.lang);\n    setNow(new Date().getTime());\n  }, []);\n\n  /* Main Function */\n  /* eslint-disable no-empty */\n  const getReason = () => {\n    let ret = '';\n    if (query.reason && query.reason.length > 0) {\n      try {\n        const reason = JSON.parse(decodeURIComponent(atob(query.reason.toString())));\n        ret = `${t('wait:reason')}<br />&#9;${reason[i18n.language.substring(0, 2)]}<br /><br />`;\n      } finally {}\n    }\n    return ret;\n  };\n  if (query.time && query.time.length > 0) {\n    const timeUTC = Number.parseInt(\n      (typeof query.time === 'string') ? query.time : query.time[0],\n      10,\n    );\n    if (timeUTC > now) {\n      const time = moment(timeUTC);\n      msg.current = `${getReason()}${t('wait:opentime')}<br />&#9;<span id=\"open-time\">${time.format('LLLL')} (${time.fromNow()})</span>`;\n      setTimeout(() => {\n        setNow(new Date().getTime());\n      }, 1000);\n    } else if (query.link && query.link.length > 0) {\n      const link = `go.wldh.org/${query.link}`;\n      msg.current = `${t('wait:opened')}&ensp;<a data-mono=\"slide\" href=\"https://${link}\">${link}</a>`;\n    }\n  } else if (query.link && query.link.length > 0) {\n    const link = `go.wldh.org/${query.link}`;\n    msg.current = `${getReason()}${t('wait:unknown')}<br />${t('wait:retry')}<br />&#9;â‡’&ensp;<a data-mono=\"slide\" href=\"https://${link}\">${link}</a>`;\n  } else {\n    msg.current = getReason().trim();\n  }\n\n  /* Render */\n  return (\n    <BackStage\n      title={t('wait:title')}\n      detailedTitle={t('wait:detail')}\n      message={t('wait:message')}\n      image={ImageDescriptors.gEnterprise}\n    >\n      <span dangerouslySetInnerHTML={{ __html: msg.current }} />\n    </BackStage>\n  );\n};\n\nexport default Wait;\nexport const config = { amp: 'true' };\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAKA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AADA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AAAA;AAAA;;;;A","sourceRoot":""}